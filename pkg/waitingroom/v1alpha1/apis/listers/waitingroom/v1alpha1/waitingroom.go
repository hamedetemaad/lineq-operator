/* AUTO GENERATED CODE */
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/hamedetemaad/lineq-operator/pkg/waitingroom/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// WaitingRoomLister helps list WaitingRooms.
// All objects returned here must be treated as read-only.
type WaitingRoomLister interface {
	// List lists all WaitingRooms in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.WaitingRoom, err error)
	// WaitingRooms returns an object that can list and get WaitingRooms.
	WaitingRooms(namespace string) WaitingRoomNamespaceLister
	WaitingRoomListerExpansion
}

// waitingRoomLister implements the WaitingRoomLister interface.
type waitingRoomLister struct {
	indexer cache.Indexer
}

// NewWaitingRoomLister returns a new WaitingRoomLister.
func NewWaitingRoomLister(indexer cache.Indexer) WaitingRoomLister {
	return &waitingRoomLister{indexer: indexer}
}

// List lists all WaitingRooms in the indexer.
func (s *waitingRoomLister) List(selector labels.Selector) (ret []*v1alpha1.WaitingRoom, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.WaitingRoom))
	})
	return ret, err
}

// WaitingRooms returns an object that can list and get WaitingRooms.
func (s *waitingRoomLister) WaitingRooms(namespace string) WaitingRoomNamespaceLister {
	return waitingRoomNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// WaitingRoomNamespaceLister helps list and get WaitingRooms.
// All objects returned here must be treated as read-only.
type WaitingRoomNamespaceLister interface {
	// List lists all WaitingRooms in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.WaitingRoom, err error)
	// Get retrieves the WaitingRoom from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.WaitingRoom, error)
	WaitingRoomNamespaceListerExpansion
}

// waitingRoomNamespaceLister implements the WaitingRoomNamespaceLister
// interface.
type waitingRoomNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all WaitingRooms in the indexer for a given namespace.
func (s waitingRoomNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.WaitingRoom, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.WaitingRoom))
	})
	return ret, err
}

// Get retrieves the WaitingRoom from the indexer for a given namespace and name.
func (s waitingRoomNamespaceLister) Get(name string) (*v1alpha1.WaitingRoom, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("waitingroom"), name)
	}
	return obj.(*v1alpha1.WaitingRoom), nil
}
